[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2024-11-22 10:43:38.415711",
  "module": "Sonali",
  "name": "Defaults in Work Order",
  "script": "frappe.ui.form.on('Work Order', {\r\n    before_save: function(frm) {\r\n        // Loop through each row in the Operations child table\r\n        frm.doc.operations.forEach(row => {\r\n            if (!row.workstation) { // Only set if workstation is not already defined\r\n                row.workstation = \"Work - 3\"; // Replace with your default workstation name\r\n            }\r\n        });\r\n        frm.refresh_field('operations'); // Refresh the table to reflect changes\r\n    }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Card",
  "enabled": 1,
  "modified": "2024-12-12 12:22:50.274980",
  "module": "Sonali",
  "name": "Dynamic Filtering on link field on Job card",
  "script": "frappe.ui.form.on(\"Job Card\", {\r\n    refresh: function(frm) {\r\n        let operation = frm.doc.operation;\r\n        if (operation === \"Packaging\") {\r\n                group = \"Packaging Team\";\r\n            } \r\n        else if (operation === \"Annealing\") {\r\n                group = \"Annealing Team\";\r\n            } \r\n        else if (operation === \"Bunching\") {\r\n                group = \"Bunching Team\";\r\n            } \r\n        else if (operation === \"Insulation\") {\r\n                group = \"Insulation Team\";\r\n            }\r\n        frm.set_query('employee', () => {\r\n    return {\r\n        filters: {\r\n            custom_employee_group: group\r\n        }\r\n    };\r\n        });\r\n    }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bulk Coupon",
  "enabled": 1,
  "modified": "2024-12-31 15:57:00.538523",
  "module": "Sonali",
  "name": "Bulk coupon code",
  "script": "frappe.listview_settings['Bulk Coupon'] = {\r\n    onload: function(listview) {\r\n        listview.page.add_inner_button(__('Create Bulk Data'), function() {\r\n            frappe.prompt([\r\n                {\r\n                    fieldname: 'number_of_coupons',\r\n                    label: 'Number of Coupons',\r\n                    fieldtype: 'Int',\r\n                    reqd: 1\r\n                },\r\n                {\r\n                    fieldname: 'coupon_amount',\r\n                    label: 'Coupon Amount',\r\n                    fieldtype: 'Int',\r\n                    reqd: 1\r\n                }\r\n            ], function(values) {\r\n                frappe.call({\r\n                    method: 'sonali.custom_functions.Bulk_coupon.create_bulk_data',\r\n                    args: {\r\n                        number_of_coupons: values.number_of_coupons,\r\n                        coupon_amount: values.coupon_amount\r\n                    },\r\n                    callback: function(response) {\r\n                        if (response.message) {\r\n                            frappe.msgprint(__('Bulk data created successfully!'));\r\n                            listview.refresh();\r\n                        }\r\n                    }\r\n                });\r\n            }, __('Create Bulk Data'), __('Create'));\r\n        });\r\n    }\r\n};\r\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Packaging Batch",
  "enabled": 1,
  "modified": "2025-02-03 14:43:36.992223",
  "module": null,
  "name": "Packaging Batch",
  "script": "frappe.ui.form.on('Packaging Batch', {\r\n    refresh: function(frm) {\r\n        // Update the serial_no query when the form is refreshed\r\n        set_serial_no_query(frm);\r\n    },\r\n    item_name: function(frm) {\r\n        // When the item_name field changes, update the query\r\n        set_serial_no_query(frm);\r\n        console.log(frm.doc.item_name)\r\n        // Optionally refresh the child table to immediately show the effect\r\n        frm.refresh_field('serial_nos');\r\n    }\r\n});\r\n\r\nfunction set_serial_no_query(frm) {\r\n    // Ensure the child table exists before setting the query\r\n    if (frm.fields_dict['serial_nos']) {\r\n        if (frm.doc.item_name) {\r\n            // If an item is selected, apply the filter on item_code\r\n            frm.fields_dict['serial_nos'].grid.get_field('serial_no').get_query = function(doc, cdt, cdn) {\r\n                return {\r\n                    filters: {\r\n                        item_code: frm.doc.item_name\r\n                    }\r\n                };\r\n            };\r\n        } else {\r\n            // If no item is selected, remove the custom query to show all Serial No records\r\n            frm.fields_dict['serial_nos'].grid.get_field('serial_no').get_query = null;\r\n        }\r\n    } else {\r\n        console.warn(\"Child table field 'serial_nos' not found. Please verify the fieldname.\");\r\n    }\r\n}\r\n\n\nfrappe.ui.form.on('Serial for custom Batch', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 }
]