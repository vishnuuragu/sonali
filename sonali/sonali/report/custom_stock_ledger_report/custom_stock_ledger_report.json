{
 "add_total_row": 0,
 "columns": [],
 "creation": "2025-03-20 12:43:25.013870",
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "filters": [
  {
   "default": "frappe.datetime.add_months(frappe.datetime.nowdate(), -25)",
   "fieldname": "from_date",
   "fieldtype": "Date",
   "label": "From Date",
   "mandatory": 0,
   "wildcard_filter": 0
  },
  {
   "default": "Today",
   "fieldname": "to_date",
   "fieldtype": "Date",
   "label": "To date",
   "mandatory": 0,
   "wildcard_filter": 0
  }
 ],
 "idx": 0,
 "is_standard": "Yes",
 "letterhead": null,
 "modified": "2025-06-03 14:17:52.784811",
 "modified_by": "Administrator",
 "module": "Sonali",
 "name": "Custom Stock Ledger Report",
 "owner": "Administrator",
 "prepared_report": 0,
 "query": "WITH serial_totals AS (\n    SELECT\n        sn.item_code,\n        sn.warehouse,\n        SUM(CASE WHEN sn.status = 'Active' THEN sn.custom_weight ELSE 0 END) AS total_weight,\n        SUM(CASE WHEN sn.status = 'Active' THEN sn.custom_length ELSE 0 END) AS total_meters\n    FROM `tabSerial No` sn\n    GROUP BY sn.item_code, sn.warehouse\n)\n\nSELECT \n    sle.item_code AS \"Item Code:Link/Item:150\",\n    item.item_group AS \"Item Group:Link/Item Group:150\",\n    sle.warehouse AS \"Warehouse:Link/Warehouse:150\",\n    AVG(sle.valuation_rate) AS \"Average Valuation Rate:Currency:100\",\n    SUM(sle.stock_value) AS \"Total Stock Value:Currency:120\",\n    SUM(sle.actual_qty) AS \"Boxes:Float:100\",\n\n    IFNULL(st.total_weight, 0) AS \"Total Weight:Float:120\",\n    IFNULL(st.total_meters, 0) AS \"Total Meters:Float:120\"\n\nFROM \n    `tabStock Ledger Entry` sle\nJOIN \n    `tabItem` item ON sle.item_code = item.name\nLEFT JOIN \n    `tabBOM` bom ON bom.item = sle.item_code\nLEFT JOIN\n    serial_totals st ON st.item_code = sle.item_code AND st.warehouse = sle.warehouse\n\nWHERE \n    (item.item_group = 'Products' OR bom.item IS NOT NULL)\n    AND sle.posting_date BETWEEN %(from_date)s AND %(to_date)s\n\nGROUP BY \n    sle.item_code, sle.warehouse, item.item_group, st.total_weight, st.total_meters\n\nHAVING \n    NOT (\n        SUM(sle.actual_qty) = 0 AND\n        IFNULL(st.total_weight, 0) = 0 AND\n        IFNULL(st.total_meters, 0) = 0\n    )\n\nORDER BY \n    sle.item_code, sle.warehouse;\n",
 "ref_doctype": "Stock Ledger Entry",
 "report_name": "Custom Stock Ledger Report",
 "report_type": "Query Report",
 "roles": [
  {
   "role": "Stock User"
  },
  {
   "role": "Accounts Manager"
  }
 ],
 "timeout": 0
}